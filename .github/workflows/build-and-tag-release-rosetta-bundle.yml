name: Build and Tag with Rosetta Bundle Version

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: maven

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Download external POM
      run: |
        curl -L -o cdm-pom.xml https://raw.githubusercontent.com/finos/common-domain-model/main/pom.xml

    - name: Extract rosetta.bundle.version from external POM using Maven
      id: extract_version
      run: |
        version=$(mvn -f cdm-pom.xml help:evaluate -Dexpression=rosetta.bundle.version -q -DforceStdout)
        echo "rosetta.bundle.version=$version"
        echo "version=$version" >> $GITHUB_OUTPUT

    - name: Update all rosetta.bundle.version properties in local pom.xml using Maven
      run: |
        version="${{ steps.extract_version.outputs.version }}"
        mvn versions:set-property -Dproperty=rosetta.bundle.version -DnewVersion=$version -DprocessAllModules=true

    - name: Set POM version to rosetta.bundle.version
      run: |
        version="${{ steps.extract_version.outputs.version }}"
        echo "Setting POM version to $version"
        mvn -B versions:set -DnewVersion=$version

    - name: Build with Maven
      run: mvn -B package

    - name: Revert POM property changes
      run: mvn versions:revert

    - name: Upload JAR files
      uses: actions/upload-artifact@v4
      with:
        name: jar-files
        path: target/*.jar

    - name: Create GitHub Tag and Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.extract_version.outputs.version }}
        name: Release ${{ steps.extract_version.outputs.version }}
        files: target/*.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}