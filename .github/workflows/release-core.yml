# .github/workflows/release-core.yml
name: Core Release Workflow

on:
  workflow_call:
    inputs:
      release_version:
        required: true
        type: string

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Get artifactId
        id: get_artifact_id
        run: |
          ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          echo "artifact_id=$ARTIFACT_ID" >> $GITHUB_OUTPUT

      - name: Set POM version to release version and build
        run: |
          echo "Updating POM version to ${{ inputs.release_version }}"
          mvn -B versions:set -DnewVersion=${{ inputs.release_version }}
          mvn -B package -Psign-artifacts

      - name: Revert POM changes
        run: git checkout -- pom.xml

      - name: Check if tag already exists and create if not
        id: create_tag
        env:
          RELEASE_TAG: "${{ inputs.release_version }}"
        run: |
          # Fetch all tags to check for existence
          git fetch --tags
          if git tag | grep -q "${{ env.RELEASE_TAG }}"; then
            echo "Tag ${{ env.RELEASE_TAG }} already exists, skipping tag creation."
          else
            echo "Creating and pushing tag ${{ env.RELEASE_TAG }}"
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag "${{ env.RELEASE_TAG }}"
            git push origin "${{ env.RELEASE_TAG }}"
          fi
          echo "TAG_NAME=${{ env.RELEASE_TAG }}" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          files: |
            target/${{ steps.get_artifact_id.outputs.artifact_id }}-${{ inputs.release_version }}.jar
            target/${{ steps.get_artifact_id.outputs.artifact_id }}-${{ inputs.release_version }}-javadoc.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}